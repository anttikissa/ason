{
  "name": "basic-log",
  "version": "0.1.2",
  "description": "A simple logging library",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "./test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/anttisykari/basic-log"
  },
  "keywords": [
    "log"
  ],
  "author": {
    "name": "Antti SykÃ¤ri"
  },
  "license": "BSD",
  "devDependencies": {
    "basic-assert": ">=0.2.1"
  },
  "readme": "# A simple logging library for Node.js\n\nThe logging library that requires the least amount of keystrokes.\n\n## Installing\n\n\t$ npm install basic-log\n\n## Simple usage\n\n\tvar log = require('basic-log');\n\n\tlog('Hello!');\n\nOutput:\n\n\t2013-01-19 09:01:53.478 Hello!\n\n`log` takes a single argument, converts it to string, and prints it to console.\n\n## Other log levels:\n\n\tlog.d('Hello!');\n\tlog.i('Hello!');\n\tlog.w('Hello!');\n\tlog.e('Hello!');\n\nOutput:\n\n\t2013-01-19 09:03:17.671 [debug] Hello!\n\t2013-01-19 09:03:17.671 [info] Hello!\n\t2013-01-19 09:03:17.671 [warn] Hello!\n\t2013-01-19 09:03:17.671 [error] Hello!\n\n## Suppressing one or more levels\n\n\tlog.setLevel('info');\n\tlog.d('Will not be logged');\n\tlog.i('Will be logged');\n\n`log.setLevel` accepts the following levels: `'none'`, `'debug'`, `'warn'`, `'info'`, `'debug'`.  Each level includes the levels preceding it.  `'all'` is an alias for `'debug'`.\n\n## TODO Complex usage\n\n...\n\n## Changing the date format\n\nBy default, the date format is `YYYY-MM-DD hh:mm:ss:mmm` in UTC time.\n\nChange it by setting `date`:\n\n\tlog.date = function() {\n\t\treturn new Date().getTime() + ' ';\n\t}\n\n\tlog('Hello!');\n\nOutput:\n\n\t1358586277536 Hello!\n\nOr get rid of the time altogether:\n\n\tlog.date = function() {\n\t\treturn '';\n\t}\n\n\tlog('Hello!');\n\nOutput:\n\n\tHello!\n\n## Changing the output\n\nBy default, messages are written using `console.log`.\n\nChange it by setting `output`:\n\n\tlog.output = function(message) {\n\t\tconsole.err(message);\n\t}\n\n\tlog('Hello!'); // prints to stderr\n\nOr make it return a value if you like:\n\n\tlog.output = function(message) {\n\t\treturn message.toUpperCase();\n\t}\n\n\tconsole.log(log('Hello!'));\n\nOutput:\n\n\tHELLO!\n\n## Creating new instances\n\nIf want to avoid changing the global `log`, you make create a new instance:\n\n\tvar Log = require('basic-log').Log;\n\tvar log = new Log(<custom functions>);\n\nA typical use case would be to create your own log module and use it:\n\n`lib/my-log.js`:\n\n\tvar Log = require('basic-log').Log;\n\n\tmodule.exports = new Log({\n\t\tdate: function() { return new Date().getTime() + ' '; }\n\t});\n\n\n`my-app.js`:\n\n\tvar log = require('./lib/my-log');\n\n\tlog('Hi!');\n\n## TODO\n\n### Module-specific loggers\n\nSimply:\n\nmodule1:\n\n\tvar log = require('basic-log').as('module1');\n\tlog.i(\"hello\");\n\nlib/module2:\n\n\tvar log = require('basic-log').as('lib/module2');\n\tlog.i(\"world\");\n\nAnd you get\n\n\t2013-11-01 18:47:18.430 [info] module1: hello\n\t2013-11-01 18:47:18.442 [info] lib/module2: world\n\nMaybe auto-configure it so that\n\n\t// in 'mymodule.js'\n    var log = require('basic-log')();\n\nis the same as\n\n\tvar log = require('basic-log').as('mymodule');\n\n(if possible).\n\n### Enable and disable log levels per-level \n\nPerhaps so that .setLevel('info') will .enable('info'), .enable('warn'),\n.enable('error')\n\n### Enable and disable log levels per-module\n\n### Add level 'trace'\n  \n### Better tests!\n\n### Change the name\n\n`basic-log` is too much to type\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/anttisykari/basic-log/issues"
  },
  "homepage": "https://github.com/anttisykari/basic-log",
  "_id": "basic-log@0.1.2",
  "dist": {
    "shasum": "5c313ea5d71a92b8bcce63cc9438ae8ceae8117d"
  },
  "_from": "../basic-log"
}
